// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP.Template.AccessData;

namespace TP2.Template.AccessData.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20210110000208_BibliotecaDB")]
    partial class BibliotecaDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TP2.Template.Domain.Entities.Alquiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoAlquilerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAlquiler")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibroISBN")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoAlquilerId");

                    b.HasIndex("LibroISBN");

                    b.ToTable("Alquiler");
                });

            modelBuilder.Entity("TP2.Template.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Olivera",
                            Dni = "34124131",
                            Email = "l.olivera@gmail.com",
                            Nombre = "Lucas"
                        });
                });

            modelBuilder.Entity("TP2.Template.Domain.Entities.EstadoAlquiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoAlquiler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Alquilado"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Reservado"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Cancelado"
                        });
                });

            modelBuilder.Entity("TP2.Template.Domain.Entities.Libro", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Editorial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ISBN");

                    b.ToTable("Libro");

                    b.HasData(
                        new
                        {
                            ISBN = "1",
                            Autor = "Antoine de Saint-Exupéry",
                            Editorial = "Reynal & Hitchcock",
                            Imagen = "https://imagessl4.casadellibro.com/a/l/t7/94/9788478887194.jpg",
                            Stock = 1,
                            Titulo = "El Principito"
                        },
                        new
                        {
                            ISBN = "2",
                            Autor = "J. K. Rowling",
                            Editorial = "Salamandra",
                            Imagen = "https://images-na.ssl-images-amazon.com/images/I/91HHems0BVL.jpg",
                            Stock = 3,
                            Titulo = "Harry Potter y la camara secreta"
                        },
                        new
                        {
                            ISBN = "3",
                            Autor = "Dan Brown",
                            Editorial = "Doubleday",
                            Imagen = "https://www.planetadelibros.com.ar/usuaris/libros/fotos/167/m_libros/portada_el-codigo-da-vinci_dan-brown_201505260959.jpg",
                            Stock = 3,
                            Titulo = "El código Da Vinci"
                        },
                        new
                        {
                            ISBN = "4",
                            Autor = "J.R.R.Tolkien",
                            Editorial = "George Allen & Unwin",
                            Imagen = "https://images.cdn1.buscalibre.com/fit-in/360x360/66/1a/661a3760157941a94cb8db3f5a9d5060.jpg",
                            Stock = 4,
                            Titulo = "El Señor de los Anillos"
                        },
                        new
                        {
                            ISBN = "5",
                            Autor = "Margaret Mitchell",
                            Editorial = "Macmillan Publishers",
                            Imagen = "https://m.media-amazon.com/images/I/517buCKnBjL.jpg",
                            Stock = 2,
                            Titulo = "Lo que el viento se llevó"
                        });
                });

            modelBuilder.Entity("TP2.Template.Domain.Entities.Alquiler", b =>
                {
                    b.HasOne("TP2.Template.Domain.Entities.Cliente", "Cliente")
                        .WithMany("AlquileresNavigator")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP2.Template.Domain.Entities.EstadoAlquiler", "EstadoAlquiler")
                        .WithMany("AlquilerNavigator")
                        .HasForeignKey("EstadoAlquilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP2.Template.Domain.Entities.Libro", "Libro")
                        .WithMany("AlquilerNavigator")
                        .HasForeignKey("LibroISBN");
                });
#pragma warning restore 612, 618
        }
    }
}
